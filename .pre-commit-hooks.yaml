-   id: check-added-large-files
    name: Check for added large files
    description: Prevents giant files from being committed.
    entry: check-added-large-files
    language: python
-   id: check-ast
    name: Check Python AST
    description: Simply checks whether the files parse as valid python.
    entry: check-ast
    language: python
    types: [python]
-   id: check-byte-order-marker
    name: 'Check BOM - deprecated: use fix-byte-order-marker'
    description: Forbids files which have a UTF-8 byte-order marker.
    entry: check-byte-order-marker
    language: python
    types: [text]
-   id: check-builtin-literals
    name: Check builtin type constructor use
    description: Requires literal syntax when initializing empty or zero Python builtin types.
    entry: check-builtin-literals
    language: python
    types: [python]
-   id: check-case-conflict
    name: Check for case conflicts
    description: Checks for files that would conflict in case-insensitive filesystems.
    entry: check-case-conflict
    language: python
-   id: check-docstring-first
    name: Check docstring is first
    description: Checks a common error of defining a docstring after code.
    entry: check-docstring-first
    language: python
    types: [python]
-   id: check-executables-have-shebangs
    name: Check that executables have shebangs
    description: Ensures that (non-binary) executables have a shebang.
    entry: check-executables-have-shebangs
    language: python
    types: [text, executable]
    stages: [commit, push, manual]
-   id: check-json
    name: Check JSON
    description: Checks JSON files for parseable syntax.
    entry: check-json
    language: python
    types: [json]
-   id: check-shebang-scripts-are-executable
    name: Check that scripts with shebangs are executable
    description: Ensures that (non-binary) files with a shebang are executable.
    entry: check-shebang-scripts-are-executable
    language: python
    types: [text]
    stages: [commit, push, manual]
-   id: pretty-format-json
    name: Pretty format JSON
    description: Sets a standard for formatting JSON files.
    entry: pretty-format-json
    language: python
    types: [json]
-   id: check-merge-conflict
    name: Check for merge conflicts
    description: Checks for files that contain merge conflict strings.
    entry: check-merge-conflict
    language: python
    types: [text]
-   id: check-symlinks
    name: Check for broken symlinks
    description: Checks for symlinks which do not point to anything.
    entry: check-symlinks
    language: python
    types: [symlink]
-   id: check-toml
    name: Check TOML
    description: Checks TOML files for parseable syntax.
    entry: check-toml
    language: python
    types: [toml]
-   id: check-vcs-permalinks
    name: Check VCS permalinks
    description: Ensures that links to VCS websites are permalinks.
    entry: check-vcs-permalinks
    language: python
    types: [text]
-   id: check-xml
    name: Check XML
    description: Checks XML files for parseable syntax.
    entry: check-xml
    language: python
    types: [xml]
-   id: check-yaml
    name: Check YAML
    description: Checks YAML files for parseable syntax.
    entry: check-yaml
    language: python
    types: [yaml]
-   id: debug-statements
    name: Debug statements (Python)
    description: Checks for debugger imports and py37+ `breakpoint()` calls in python source.
    entry: debug-statement-hook
    language: python
    types: [python]
-   id: destroyed-symlinks
    name: Detect destroyed symlinks
    description: Detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
    entry: destroyed-symlinks
    language: python
    types: [file]
-   id: detect-aws-credentials
    name: Detect AWS credentials
    description: Detects *your* AWS credentials from the AWS CLI credentials file.
    entry: detect-aws-credentials
    language: python
    types: [text]
-   id: detect-private-key
    name: Detect private key
    description: Detects the presence of private keys.
    entry: detect-private-key
    language: python
    types: [text]
-   id: double-quote-string-fixer
    name: Fix double quoted strings
    description: Replaces double quoted strings with single quoted strings.
    entry: double-quote-string-fixer
    language: python
    types: [python]
-   id: end-of-file-fixer
    name: Fix end of files
    description: Ensures that a file is either empty, or ends with one newline.
    entry: end-of-file-fixer
    language: python
    types: [text]
    stages: [commit, push, manual]
-   id: file-contents-sorter
    name: File contents sorter
    description: Sorts the lines in specified files (defaults to alphabetical). You must provide list of target files as input in your .pre-commit-config.yaml file.
    entry: file-contents-sorter
    language: python
    files: '^$'
-   id: fix-byte-order-marker
    name: Fix UTF-8 byte order marker
    description: Removes UTF-8 byte order marker.
    entry: fix-byte-order-marker
    language: python
    types: [text]
-   id: fix-encoding-pragma
    name: Fix python encoding pragma
    description: 'Adds # -*- coding: utf-8 -*- to the top of python files.'
    language: python
    entry: fix-encoding-pragma
    types: [python]
-   id: forbid-new-submodules
    name: Forbid new submodules
    description: Prevents addition of new git submodules.
    language: python
    entry: forbid-new-submodules
-   id: mixed-line-ending
    name: Mixed line ending
    description: Replaces or checks mixed line ending.
    entry: mixed-line-ending
    language: python
    types: [text]
-   id: name-tests-test
    name: Tests should end in _test.py
    description: This verifies that test files are named correctly.
    entry: name-tests-test
    language: python
    files: (^|/)tests/.+\.py$
-   id: no-commit-to-branch
    name: "Don't commit to branch"
    entry: no-commit-to-branch
    language: python
    pass_filenames: false
    always_run: true
-   id: requirements-txt-fixer
    name: Fix requirements.txt
    description: Sorts entries in requirements.txt.
    entry: requirements-txt-fixer
    language: python
    files: requirements.*\.txt$
-   id: sort-simple-yaml
    name: Sort simple YAML files
    description: Sorts simple YAML files which consist only of top-level keys, preserving comments and blocks.
    language: python
    entry: sort-simple-yaml
    files: '^$'
-   id: trailing-whitespace
    name: Trim trailing whitespace
    description: Trims trailing whitespace.
    entry: trailing-whitespace-fixer
    language: python
    types: [text]
    stages: [commit, push, manual]
